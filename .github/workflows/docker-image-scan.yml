name: Docker Image Scan

on:
  workflow_dispatch:
    inputs:
      ecr_repository:
        description: "ECR Repository name"
        required: true
        default: "mi-app-web"
      image_tag:
        description: "Docker image tag"
        required: true
        default: "latest"

env:
  AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}

jobs:
  docker-image-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN || '' }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr

      - name: Get AWS Account ID
        id: account
        run: echo "account_id=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_OUTPUT

      - name: List Docker Images
        run: |
          aws ecr list-images \
            --repository-name ${{ github.event.inputs.ecr_repository }} \
            --region ${{ env.AWS_REGION }}

      - name: Pull Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.event.inputs.ecr_repository }}
          IMAGE_TAG: ${{ github.event.inputs.image_tag }}
        run: |
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Install Snyk
        run: npm install -g snyk

      - name: Authenticate Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk auth $SNYK_TOKEN

      - name: Scan Docker Image
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.event.inputs.ecr_repository }}
          IMAGE_TAG: ${{ github.event.inputs.image_tag }}
        run: |
          snyk container test $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            --severity-threshold=high \
            --json-file-output=snyk-results.json
      
